from commands import commands
from Deadline.homework import HomeWork

class Deadlines:
	deadlines = dict() #–°–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤

	def __init__(self):
		pass

	def Add_Deadline(self, message_:str, conversation_id):
		print(conversation_id)
		try: 
			if conversation_id not in self.deadlines:
				self.deadlines[conversation_id] = dict()
		except:
			pass
		words=message_.split(' : ')

		try:
			if words[1] in self.deadlines[conversation_id]:
				self.deadlines[conversation_id][words[1]].append(HomeWork(words[2], words[3]))
			else:
				self.deadlines[conversation_id][words[1]] = [HomeWork(words[2], words[3])]
			response = {'message': commands['add_deadline']['message'][0],'attachment': commands['add_deadline']['attachment']}
			return response
		except BaseException:
			response = {'message': commands['add_deadline']['message'][1],'attachment': commands['add_deadline']['attachment']}
			return response

	def Get_Deadline(self, message_:str, conversation_id):
		words=message_.split(' : ')
		print(conversation_id)
		try:
			message:str = ''
			if words[1] in self.deadlines[conversation_id]:
				message = 'üìå –°–ø–∏—Å–æ–∫ –¥–∑ –Ω–∞: '+words[1]+' üìå\n\n'
				for subj in self.deadlines[conversation_id][words[1]]:
					message+='‚óè '+subj.get_subject()+':\n&#12288; &#12288;'+subj.get_homework()+'\n\n'
			else:
				message = '–ù–∞ –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –ø–∏–∑–¥—É–π-–±–æ—Ä–æ–∑–¥—É–π!'
			response = {'message': message, 'attachment': ''}
			return response
		except:
			response = {'message': '–í —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –Ω–µ—Ç, –±–ª—è—Ç—å, –Ω–∏ –µ–¥–∏–Ω–æ–π –∑–∞–ø–∏—Å–∏!', 'attachment': ''}
			return response

	def Delete_Deadline_Subject(self, message_:str, conversation_id):
		
		try:
			words=message_.split(' : ')
			message: str = ''
			if words[1] in self.deadlines[conversation_id]:
				finded_homework = self.Check(self.deadlines[conversation_id][words[1]],words[2])
				if finded_homework != None :
					self.deadlines[conversation_id][words[1]].remove(finded_homework)
					message = '–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!'
				else:
					message = '–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å, –ø—Ä–æ–≤–µ—Ä—å –Ω–∞ –æ—à–∏–±–æ—á–∫–∏, –±—É–ª–æ—á–∫–∞, –∏ –Ω–µ –±–µ—Å–∏ –º–µ–Ω—è –±–æ–ª—å—à–µ....'
			else:
				message = '–ù–∞ –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, —á—Ç–æ —Ç—ã, –ø–∏–∑–¥–∞ –∫–æ–ø—á–µ–Ω–∞—è, —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å?'
			response = {'message': message, 'attachment': ''}
			return response
			
		except:
			response = {'message': '–í —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –Ω–µ—Ç, –±–ª—è—Ç—å, –Ω–∏ –µ–¥–∏–Ω–æ–π –∑–∞–ø–∏—Å–∏!', 'attachment': ''}
			return response

	def Delete_Deadline(self, message_:str, conversation_id):
		try:
			words=message_.split(' : ')
			message: str = ''
			if words[1] in self.deadlines[conversation_id]:
				del self.deadlines[conversation_id][words[1]]
				message = '–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!'
			else:
				message = '–ù–∞ –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, —á—Ç–æ —Ç—ã, –ø–∏–∑–¥–∞ –∫–æ–ø—á–µ–Ω–∞—è, —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å?'
			response = {'message': message, 'attachment': ''}
			return response
		except:
			response = {'message': '–í —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –Ω–µ—Ç, –±–ª—è—Ç—å, –Ω–∏ –µ–¥–∏–Ω–æ–π –∑–∞–ø–∏—Å–∏!', 'attachment': ''}
			return response


	def Check(self, day,subj):
		for homework in day:
			if homework.get_subject() == subj:
				return homework
		return None
